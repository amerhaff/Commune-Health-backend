# Generated by Django 5.1.5 on 2025-01-31 22:52

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('address_line1', models.CharField(max_length=255)),
                ('address_line2', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=2)),
                ('zip_code', models.CharField(max_length=10)),
                ('sex', models.CharField(max_length=1)),
                ('date_of_birth', models.DateField()),
                ('enrollment_date', models.DateField()),
                ('enrollment_status', models.CharField(max_length=20)),
                ('dpc_membership_id', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('ADMIN', 'Admin'), ('PROVIDER', 'Provider'), ('EMPLOYER', 'Employer'), ('BROKER', 'Broker')], max_length=20)),
                ('phone', models.CharField(max_length=20)),
                ('address_line1', models.CharField(max_length=255)),
                ('address_line2', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=2)),
                ('zip_code', models.CharField(max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Broker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brokerage_name', models.CharField(max_length=255)),
                ('website', models.URLField(blank=True)),
                ('national_producer_number', models.CharField(max_length=100)),
                ('states_licensed', models.JSONField(default=list)),
                ('licensure_number', models.CharField(max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='broker', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Dependent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('sex', models.CharField(max_length=1)),
                ('relationship', models.CharField(choices=[('SPOUSE', 'Spouse'), ('PARTNER', 'Partner'), ('CHILD', 'Child')], max_length=20)),
                ('enrollment_date', models.DateField()),
                ('enrollment_status', models.CharField(max_length=20)),
                ('dpc_membership_id', models.CharField(max_length=50, unique=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependents', to='accounts.employee')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('company_type', models.CharField(max_length=50)),
                ('industry', models.CharField(max_length=100)),
                ('company_size', models.IntegerField()),
                ('website', models.URLField(blank=True)),
                ('employer_identification_number', models.CharField(max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='employee',
            name='employer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='accounts.employer'),
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider_type', models.CharField(choices=[('MDDO', 'MD/DO'), ('NP', 'Nurse Practitioner'), ('PA', 'Physician Assistant')], max_length=10)),
                ('practice_name', models.CharField(max_length=255)),
                ('website', models.URLField(blank=True)),
                ('years_experience', models.IntegerField()),
                ('npi_number', models.CharField(max_length=10)),
                ('dea_number', models.CharField(max_length=9)),
                ('states_licensed', models.JSONField(default=list)),
                ('license_number', models.CharField(max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='provider', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PAProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pa_school', models.CharField(max_length=255)),
                ('pa_school_graduation_year', models.IntegerField()),
                ('provider', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pa_details', to='accounts.provider')),
            ],
        ),
        migrations.CreateModel(
            name='NPProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('np_school', models.CharField(max_length=255)),
                ('np_school_graduation_year', models.IntegerField()),
                ('provider', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='np_details', to='accounts.provider')),
            ],
        ),
        migrations.CreateModel(
            name='MDDOProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medical_school', models.CharField(max_length=255)),
                ('medical_school_graduation_year', models.IntegerField()),
                ('residency_institution', models.CharField(max_length=255)),
                ('residency_specialty', models.CharField(max_length=255)),
                ('residency_graduation_year', models.IntegerField()),
                ('fellowship_institution', models.CharField(blank=True, max_length=255)),
                ('fellowship_specialty', models.CharField(blank=True, max_length=255)),
                ('fellowship_graduation_year', models.IntegerField(blank=True, null=True)),
                ('provider', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mddo_details', to='accounts.provider')),
            ],
        ),
    ]
